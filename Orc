@@ -0,0 +1,414 @@
package me.Ben.orc;

import java.util.ArrayList;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Effect;
import org.bukkit.GameMode;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.entity.EntityExplodeEvent;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.event.player.PlayerDropItemEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.PlayerInventory;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;

public class Main extends JavaPlugin implements Listener {
	 
	public void onEnable() {
		getServer().getPluginManager().registerEvents(this, this);
	}
	
	public void onDisable() {
		
	}
	
	ArrayList<Player> cooldown = new ArrayList<Player>();
	ArrayList<Player> cooldown2 = new ArrayList<Player>();
	
	  @EventHandler 
	  public void onPlayerJoin(PlayerJoinEvent event){
		  Player player = event.getPlayer();
	      PlayerInventory inventory = player.getInventory();
		  ItemStack rage = new ItemStack(Material.STICK, 1);
          ItemMeta itemmeta = rage.getItemMeta();
          itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "RAGE " + ChatColor.GRAY + "(Right-Click)");
          rage.setItemMeta(itemmeta);
	      
          ItemStack crush = new ItemStack(Material.STICK, 1);
          itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "CRUSH " + ChatColor.GRAY + "(Right-Click)");
          crush.setItemMeta(itemmeta);
	      
	      if(inventory.contains(crush) || inventory.contains(rage)) {
			  player.setHealthScale(28);
		  }
	  }
	
	  @EventHandler(ignoreCancelled=true) 
	    public void onDrop(PlayerDropItemEvent e){
		  
		  ItemStack rage = new ItemStack(Material.STICK, 1);
          ItemMeta itemmeta = rage.getItemMeta();
          itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "RAGE " + ChatColor.GRAY + "(Right-Click)");
          rage.setItemMeta(itemmeta);
			
          ItemStack crush = new ItemStack(Material.STICK, 1);
          itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "CRUSH " + ChatColor.GRAY + "(Right-Click)");
          crush.setItemMeta(itemmeta);
          
          ItemStack speed = new ItemStack(Material.STICK, 1);
          itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "SPEED " + ChatColor.GRAY + "(Right-Click)");
          speed.setItemMeta(itemmeta);
  		
  		  ItemStack leap = new ItemStack(Material.STICK, 1);
          itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "LEAP " + ChatColor.GRAY + "(Right-Click)");
          leap.setItemMeta(itemmeta);
          
  		  ItemStack purify = new ItemStack(Material.STICK, 1);
          itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "PURIFY " + ChatColor.GRAY + "(Right-Click)");
          purify.setItemMeta(itemmeta);
          
          ItemStack invis = new ItemStack(Material.STICK, 1);
          itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "CLOAK " + ChatColor.GRAY + "(Right-Click)");
          invis.setItemMeta(itemmeta);
  		
  		ItemStack fly = new ItemStack(Material.STICK, 1);
          itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "FLY " + ChatColor.GRAY + "(Right-Click)");
          fly.setItemMeta(itemmeta);
          
          
          if (e.getItemDrop().getItemStack().equals(crush)) {
        	  e.setCancelled(true);
          }
          
          if (e.getItemDrop().getItemStack().equals(rage)) {
        	  e.setCancelled(true);
          }
          
          if (e.getItemDrop().getItemStack().equals(speed)) {
        	  e.setCancelled(true);
          }
          
          if (e.getItemDrop().getItemStack().equals(leap)) {
        	  e.setCancelled(true);
          }
          
          if (e.getItemDrop().getItemStack().equals(purify)) {
        	  e.setCancelled(true);
          }
          
          if (e.getItemDrop().getItemStack().equals(invis)) {
        	  e.setCancelled(true);
          }
          
          if (e.getItemDrop().getItemStack().equals(fly)) {
        	  e.setCancelled(true);
          }
          
          
	    }
	  
	  @SuppressWarnings("deprecation")
	  @EventHandler(priority = EventPriority.MONITOR)
	  public void onMove(InventoryClickEvent e){
			ItemStack rage = new ItemStack(Material.STICK, 1);
            ItemMeta itemmeta = rage.getItemMeta();
            itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "RAGE " + ChatColor.GRAY + "(Right-Click)");
            rage.setItemMeta(itemmeta);
			
            ItemStack crush = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "CRUSH " + ChatColor.GRAY + "(Right-Click)");
            crush.setItemMeta(itemmeta);
            
            ItemStack speed = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "SPEED " + ChatColor.GRAY + "(Right-Click)");
            speed.setItemMeta(itemmeta);
    		
    		  ItemStack leap = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "LEAP " + ChatColor.GRAY + "(Right-Click)");
            leap.setItemMeta(itemmeta);
            
    		  ItemStack purify = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "PURIFY " + ChatColor.GRAY + "(Right-Click)");
            purify.setItemMeta(itemmeta);
            
            ItemStack invis = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "CLOAK " + ChatColor.GRAY + "(Right-Click)");
            invis.setItemMeta(itemmeta);
    		
    		ItemStack fly = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "FLY " + ChatColor.GRAY + "(Right-Click)");
            fly.setItemMeta(itemmeta);
            
            
		  if(e.getCurrentItem().equals(crush) || e.getCurrentItem().equals(rage) || e.getCurrentItem().equals(speed) || e.getCurrentItem().equals(leap) || e.getCurrentItem().equals(purify) || e.getCurrentItem().equals(invis) || e.getCurrentItem().equals(fly)){
			      e.setCancelled(true); 
			      e.setCursor(new ItemStack(Material.AIR));
		   }
	  }
	  
	  @EventHandler
	  public void onEntityExplode(EntityExplodeEvent event) {
		  event.setCancelled(true);
	  }
	  
		@SuppressWarnings("deprecation")
		@EventHandler
		public void onInteract(PlayerInteractEvent event) {
		    final Player player = event.getPlayer();
		    
	    	ItemStack rage = new ItemStack(Material.STICK, 1);
            ItemMeta itemmeta = rage.getItemMeta();
            itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "RAGE " + ChatColor.GRAY + "(Right-Click)");
            rage.setItemMeta(itemmeta);
			
			ItemStack crush = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "CRUSH " + ChatColor.GRAY + "(Right-Click)");
            crush.setItemMeta(itemmeta);
            
    		ItemStack food = new ItemStack(Material.COOKED_RABBIT, 15);
    		itemmeta.setDisplayName(ChatColor.WHITE + "Cooked Rabbit");
            food.setItemMeta(itemmeta);
            
    		ItemStack manacrystal = new ItemStack(Material.PRISMARINE_SHARD);
            itemmeta.setDisplayName(ChatColor.BLUE + "" + ChatColor.BOLD + "MANA CRYSTAL " + ChatColor.GRAY + "(Right-Click)");
            manacrystal.setItemMeta(itemmeta);
            
            if (player.getInventory().getItemInHand().equals(rage) && (event.getAction() == Action.LEFT_CLICK_BLOCK)) {
            	event.setCancelled(true);
            }
            
            if (player.getInventory().getItemInHand().equals(crush) && (event.getAction() == Action.LEFT_CLICK_BLOCK)) {
            	event.setCancelled(true);
            }
            
		    if (player.getInventory().getItemInHand().equals(crush) && (event.getAction() == Action.RIGHT_CLICK_AIR)) {
		    	player.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " You must be looking at a block within range!");
		    }
            
		    if (player.getInventory().getItemInHand().equals(rage) && (event.getAction() == Action.RIGHT_CLICK_AIR || event.getAction() == Action.RIGHT_CLICK_BLOCK)) {
		    	
		    	if (player.getFoodLevel() <= 0) {
		    		player.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " You don't have enough mana!");
		    		return;
		    	}
		    	
		    	if (cooldown.contains(player)) {
		    		player.playEffect(player.getLocation(), Effect.CLICK1, 0);
		    		player.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " This spell has a 10 second cooldown...");
		    		return;
		    	}
		    	player.setFoodLevel(player.getFoodLevel() - 1);
		    	player.sendMessage(ChatColor.DARK_RED + "" + ChatColor.BOLD + "Roar!" + ChatColor.GRAY + " You now have increased damage for 1 second!");
		    	player.playEffect(player.getLocation(), Effect.SMOKE, 0);
		    	player.playSound(player.getLocation(), Sound.NOTE_BASS, 10, 1);
		    	player.playSound(player.getLocation(), Sound.ZOMBIE_PIG_ANGRY, 10, 1);
		    	player.addPotionEffect(new PotionEffect(PotionEffectType.INCREASE_DAMAGE, 20, 1));
		
		    	player.addPotionEffect(new PotionEffect(PotionEffectType.SLOW, 20, 3));
		    	cooldown.add(player);
		    	Bukkit.getServer().getScheduler().scheduleSyncDelayedTask(this, new Runnable() {
		    		
		    		public void run() {
		    			cooldown.remove(player);
		    			player.playSound(player.getLocation(), Sound.ORB_PICKUP, 10, 1);
		    			player.sendMessage(ChatColor.DARK_RED + "" + ChatColor.BOLD + "RAGE" + ChatColor.GRAY + " spell is ready!");
		    		}
		
		    	}, 250);
		    	return;
		        }
		    
		    if (player.getInventory().getItemInHand().equals(crush) && (event.getAction() == Action.RIGHT_CLICK_BLOCK)) {
		    	
		    	if (player.getFoodLevel() <= 0) {
		    		player.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " You don't have enough mana!");
		    		return;
		    	}
		    	
		    	if (cooldown2.contains(player)) {
		    		player.playEffect(player.getLocation(), Effect.CLICK1, 0);
		    		player.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " This spell has a 20 second cooldown...");
		    		return;
		    	}
		    	player.setFoodLevel(player.getFoodLevel() - 1);
		    	event.getClickedBlock().getWorld().createExplosion(event.getClickedBlock().getLocation(), 5.0f, false);
		    	player.playSound(player.getLocation(), Sound.EXPLODE, 10, 1);
		    	player.addPotionEffect(new PotionEffect(PotionEffectType.REGENERATION, 60, 3));
		    	player.playEffect(player.getLocation(), Effect.MOBSPAWNER_FLAMES, 60);
		    	player.playEffect(player.getLocation(), Effect.MOBSPAWNER_FLAMES, 60);
		    	player.playEffect(player.getLocation(), Effect.MOBSPAWNER_FLAMES, 60);
		    	player.playEffect(player.getLocation(), Effect.SMOKE, 60);
		    	player.playEffect(player.getLocation(), Effect.SMOKE, 60);
		    	player.playEffect(player.getLocation(), Effect.SMOKE, 60);
		    	player.sendMessage(ChatColor.DARK_RED + "" + ChatColor.BOLD + "Smash! " + ChatColor.GRAY + "You hit the ground with your fist!");
		    	cooldown2.add(player);
		    	Bukkit.getServer().getScheduler().scheduleSyncDelayedTask(this, new Runnable() {
		    		
		    		
		    		public void run() {
		    			cooldown2.remove(player);
		    			player.playSound(player.getLocation(), Sound.ORB_PICKUP, 10, 1);
		    			player.sendMessage(ChatColor.DARK_RED + "" + ChatColor.BOLD + "CRUSH" + ChatColor.GRAY + " spell is ready!");
		    		}
		
		    	}, 400);
			    
		    	return;

		    }
		    
		    
	        if (player.getItemInHand().equals(manacrystal) && (event.getAction() == Action.RIGHT_CLICK_AIR || event.getAction() == Action.RIGHT_CLICK_BLOCK)) {
		   		
	        	if (!(player.getFoodLevel() == 20)) {
	        	
	        	     player.sendMessage(ChatColor.BLUE + "" + ChatColor.BOLD + "Slurp!" + ChatColor.GRAY + " You now have full mana!");
		   		     player.setFoodLevel(20);     
		   		     player.playSound(player.getLocation(), Sound.DRINK, 10, 1);
		             player.getInventory().removeItem(manacrystal);
	       
		             }
	        	
	        }
		}
	
        public boolean onCommand(CommandSender sender, Command cmd, String commandLabel, String args[]) {
		
		Player player = (Player) sender;
		
		if (!(sender instanceof Player)) {
			sender.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Error! " + ChatColor.GRAY + "You can't use this command in the console.");
		}
		
		if (cmd.getName().equalsIgnoreCase("orc")) {
			
			ItemStack rage = new ItemStack(Material.STICK, 1);
            ItemMeta itemmeta = rage.getItemMeta();
            itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "RAGE " + ChatColor.GRAY + "(Right-Click)");
            rage.setItemMeta(itemmeta);
			
            ItemStack crush = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "CRUSH " + ChatColor.GRAY + "(Right-Click)");
            crush.setItemMeta(itemmeta);
            
    		ItemStack food = new ItemStack(Material.COOKED_RABBIT, 15);
    		itemmeta.setDisplayName(ChatColor.WHITE + "Cooked Rabbit");
            food.setItemMeta(itemmeta);
            
        	ItemStack speed = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "SPEED " + ChatColor.GRAY + "(Right-Click)");
            speed.setItemMeta(itemmeta);
			
            ItemStack invis = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "CLOAK " + ChatColor.GRAY + "(Right-Click)");
            invis.setItemMeta(itemmeta);
            
            ItemStack fly = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "FLY " + ChatColor.GRAY + "(Right-Click)");
            fly.setItemMeta(itemmeta);
            
			ItemStack leap = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "LEAP " + ChatColor.GRAY + "(Right-Click)");
            leap.setItemMeta(itemmeta);
            
			ItemStack purify = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "PURIFY " + ChatColor.GRAY + "(Right-Click)");
            purify.setItemMeta(itemmeta);
            
    		ItemStack manacrystal = new ItemStack(Material.PRISMARINE_SHARD);
            itemmeta.setDisplayName(ChatColor.BLUE + "" + ChatColor.BOLD + "MANA CRYSTAL " + ChatColor.GRAY + "(Right-Click)");
            manacrystal.setItemMeta(itemmeta);
            
			PlayerInventory inventory = player.getInventory();
			
			if (inventory.contains(rage) || (inventory.contains(crush) || inventory.contains(speed) || inventory.contains(leap) || inventory.contains(purify) || inventory.contains(invis) || inventory.contains(fly))) {
				sender.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " It seems you've already chosen a race!");
				return true;
			}

			else
		    sender.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Are you sure? " + ChatColor.GRAY + "You will have to pay to change race in future!");
			sender.sendMessage(ChatColor.GRAY + "Type: " + ChatColor.YELLOW + "/orcconfirm " + ChatColor.GRAY + "to confirm your race.");
			
		    }
		
		    if (cmd.getName().equalsIgnoreCase("orcconfirm")) {
		    	
				ItemStack speed = new ItemStack(Material.STICK, 1);
	            ItemMeta itemmeta = speed.getItemMeta();
	            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "SPEED " + ChatColor.GRAY + "(Right-Click)");
	            speed.setItemMeta(itemmeta);
				
				ItemStack leap = new ItemStack(Material.STICK, 1);
	            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "LEAP " + ChatColor.GRAY + "(Right-Click)");
	            leap.setItemMeta(itemmeta);
	            
				ItemStack purify = new ItemStack(Material.STICK, 1);
	            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "PURIFY " + ChatColor.GRAY + "(Right-Click)");
	            purify.setItemMeta(itemmeta);
	            
		    	ItemStack rage = new ItemStack(Material.STICK, 1);
	            itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "RAGE " + ChatColor.GRAY + "(Right-Click)");
	            rage.setItemMeta(itemmeta);
				
	            ItemStack crush = new ItemStack(Material.STICK, 1);
	            itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "CRUSH " + ChatColor.GRAY + "(Right-Click)");
	            crush.setItemMeta(itemmeta);
	            
	            ItemStack invis = new ItemStack(Material.STICK, 1);
	            itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "CLOAK " + ChatColor.GRAY + "(Right-Click)");
	            invis.setItemMeta(itemmeta);
	            
	            ItemStack fly = new ItemStack(Material.STICK, 1);
	            itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "FLY " + ChatColor.GRAY + "(Right-Click)");
	            fly.setItemMeta(itemmeta);
	            
	    		ItemStack food = new ItemStack(Material.COOKED_RABBIT, 15);
	    		itemmeta.setDisplayName(ChatColor.WHITE + "Cooked Rabbit");
	            food.setItemMeta(itemmeta);
	            
	    		ItemStack manacrystal = new ItemStack(Material.PRISMARINE_SHARD);
	            itemmeta.setDisplayName(ChatColor.BLUE + "" + ChatColor.BOLD + "MANA CRYSTAL " + ChatColor.GRAY + "(Right-Click)");
	            manacrystal.setItemMeta(itemmeta);
	            
	    		PlayerInventory inventory = player.getInventory();
				if (inventory.contains(rage) || (inventory.contains(crush) || (inventory.contains(leap) || inventory.contains(speed) || inventory.contains(purify) || inventory.contains(invis) || inventory.contains(fly)))) {
					sender.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " It seems you've already chosen a race!");
					return true;
				}
	            
			sender.sendMessage(ChatColor.DARK_RED + "" + ChatColor.BOLD + "Orc " + ChatColor.GRAY + "race chosen!");
			sender.sendMessage(ChatColor.DARK_RED + "" + ChatColor.BOLD + "Orcish Blood! " + ChatColor.GRAY + "+4 hearts!");
			
			player.setGameMode(GameMode.SURVIVAL);
			player.setHealthScale(28);
            player.getInventory().setItem(0, rage);
            player.getInventory().setItem(1, crush);
            player.getInventory().setItem(6, manacrystal);
            player.getInventory().setItem(7, manacrystal);
            player.getInventory().setItem(8, food);
			 }
       

	
		return true;
	}
	
	
	
}

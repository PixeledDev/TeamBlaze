@@ -0,0 +1,296 @@
package me.Ben.human;

import java.util.ArrayList;


import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Effect;
import org.bukkit.GameMode;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.PlayerInventory;
import org.bukkit.inventory.meta.ItemMeta;
import org.bukkit.plugin.java.JavaPlugin;

public class Main extends JavaPlugin implements Listener {
	private GhostManager manager;
	
	public void onEnable() {
		getServer().getPluginManager().registerEvents(this, this);
		manager = new GhostManager(this);
	}
	
	public void onDisable() {
		
	}
	
	ArrayList<Player> cooldown = new ArrayList<Player>();
	ArrayList<Player> cooldown2 = new ArrayList<Player>();
	ArrayList<Player> cooldown3 = new ArrayList<Player>();
	ArrayList<Player> cooldown4 = new ArrayList<Player>();
	
	@SuppressWarnings("deprecation")
	@EventHandler
	public void onInteract(PlayerInteractEvent event) {
	    final Player player = event.getPlayer();
	    
        ItemStack invis = new ItemStack(Material.STICK, 1);
        ItemMeta itemmeta = invis.getItemMeta();
        itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "CLOAK " + ChatColor.GRAY + "(Right-Click)");
        invis.setItemMeta(itemmeta);
        
        ItemStack fly = new ItemStack(Material.STICK, 1);
        itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "FLY " + ChatColor.GRAY + "(Right-Click)");
        fly.setItemMeta(itemmeta);
        
        if (player.getInventory().getItemInHand().equals(invis) && (event.getAction() == Action.LEFT_CLICK_BLOCK)) {
        	event.setCancelled(true);
        }
        
        if (player.getInventory().getItemInHand().equals(fly) && (event.getAction() == Action.LEFT_CLICK_BLOCK)) {
        	event.setCancelled(true);
        }
        

	    if (player.getInventory().getItemInHand().equals(invis) && (event.getAction() == Action.RIGHT_CLICK_AIR || event.getAction() == Action.RIGHT_CLICK_BLOCK)) {
	    	
	    	if (player.getFoodLevel() <= 0) {
	    		player.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " You don't have enough mana!");
	    		return;
	    	}
	    	
	    	if (cooldown.contains(player)) {
	    		player.playEffect(player.getLocation(), Effect.CLICK1, 0);
	    		player.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " This spell has a 20 second cooldown...");
	    		return;
	    	}
	    	player.setFoodLevel(player.getFoodLevel() - 1);
	    	player.sendMessage(ChatColor.AQUA + "" + ChatColor.BOLD + "Wisp!" + ChatColor.GRAY + " You are now a ghost!");
	    	player.playEffect(player.getLocation(), Effect.SMOKE, 0);
	    	player.playSound(player.getLocation(), Sound.AMBIENCE_CAVE, 10, 1);
	    	player.playSound(player.getLocation(), Sound.CAT_HISS, 10, 1);
	    	manager.addGhost(player);
	    	
	    	cooldown4.add(player);
	    	cooldown.add(player);
	    	
                Bukkit.getServer().getScheduler().scheduleSyncDelayedTask(this, new Runnable() {
	    		
	    		public void run() {
	    			cooldown4.remove(player);
	    			manager.removeGhost(player);
	    	    	player.playSound(player.getLocation(), Sound.AMBIENCE_CAVE, 10, 1);
	    	    	player.playSound(player.getLocation(), Sound.CAT_HISS, 10, 1);
	    			player.setFlying(false);
	    		}
	    		
	    		
	
	    	}, 250);
	    	
	    	Bukkit.getServer().getScheduler().scheduleSyncDelayedTask(this, new Runnable() {
	    		
	    		public void run() {
	    			cooldown.remove(player);
	    			player.playSound(player.getLocation(), Sound.ORB_PICKUP, 10, 1);
	    			player.sendMessage(ChatColor.AQUA + "" + ChatColor.BOLD + "CLOAK" + ChatColor.GRAY + " spell is ready!");
	    		}
	    		
	    		
	
	    	}, 500);
	    	return;
	    	
	    	
	        }
	    
            if (player.getInventory().getItemInHand().equals(fly) && (event.getAction() == Action.RIGHT_CLICK_AIR || event.getAction() == Action.RIGHT_CLICK_BLOCK)) {
	    	
	    	if (player.getFoodLevel() <= 0) {
	    		player.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " You don't have enough mana!");
	    		return;
	    	}
	    	
	    	if (cooldown2.contains(player)) {
	    		player.playEffect(player.getLocation(), Effect.CLICK1, 0);
	    		player.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " This spell has a 40 second cooldown...");
	    		return;
	    	}
	    	player.setFoodLevel(player.getFoodLevel() - 1);
	    	player.sendMessage(ChatColor.AQUA + "" + ChatColor.BOLD + "Swish!" + ChatColor.GRAY + " You can now fly for 3 seconds!");
	    	player.playEffect(player.getLocation(), Effect.SMOKE, 0);
	    	player.playSound(player.getLocation(), Sound.ENDERDRAGON_WINGS, 10, 1);
	    	player.playSound(player.getLocation(), Sound.STEP_SNOW, 10, 1);
	    	player.setAllowFlight(true);
	    	cooldown2.add(player);
	    	cooldown3.add(player);
	    	
	    	Bukkit.getServer().getScheduler().scheduleSyncDelayedTask(this, new Runnable() {
	    		
	    		public void run() {
	    			cooldown3.remove(player);
	    			player.playSound(player.getLocation(), Sound.ENDERDRAGON_GROWL, 10, 1);
	    			player.setAllowFlight(false);
	    			player.setFlying(false);
	    		}
	    		
	    		
	
	    	}, 60);

	    	Bukkit.getServer().getScheduler().scheduleSyncDelayedTask(this, new Runnable() {
	    		
	    		public void run() {
	    			cooldown2.remove(player);
	    			player.playSound(player.getLocation(), Sound.ORB_PICKUP, 10, 1);
	    			player.sendMessage(ChatColor.AQUA + "" + ChatColor.BOLD + "FLY" + ChatColor.GRAY + " spell is ready!");
	    		}
	    		
	    		
	
	    	}, 1000);
	    	return;
	    	
	    	
	        }
	    
	    
	   
	}

	
    public boolean onCommand(CommandSender sender, Command cmd, String commandLabel, String args[]) {
		
		Player player = (Player) sender;
		
		if (!(sender instanceof Player)) {
			sender.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Error! " + ChatColor.GRAY + "You can't use this command in the console.");
		}
		
		if (cmd.getName().equalsIgnoreCase("human")) {
			
			ItemStack rage = new ItemStack(Material.STICK, 1);
            ItemMeta itemmeta = rage.getItemMeta();
            itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "RAGE " + ChatColor.GRAY + "(Right-Click)");
            rage.setItemMeta(itemmeta);
			
            ItemStack crush = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "CRUSH " + ChatColor.GRAY + "(Right-Click)");
            crush.setItemMeta(itemmeta);
            
            ItemStack invis = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "CLOAK " + ChatColor.GRAY + "(Right-Click)");
            invis.setItemMeta(itemmeta);
            
            ItemStack fly = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "FLY " + ChatColor.GRAY + "(Right-Click)");
            fly.setItemMeta(itemmeta);
            
    		ItemStack food = new ItemStack(Material.BREAD, 15);
    		itemmeta.setDisplayName(ChatColor.WHITE + "Bread");
            food.setItemMeta(itemmeta);
            
        	ItemStack speed = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "SPEED " + ChatColor.GRAY + "(Right-Click)");
            speed.setItemMeta(itemmeta);
			
			ItemStack leap = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "LEAP " + ChatColor.GRAY + "(Right-Click)");
            leap.setItemMeta(itemmeta);
            
			ItemStack purify = new ItemStack(Material.STICK, 1);
            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "PURIFY " + ChatColor.GRAY + "(Right-Click)");
            purify.setItemMeta(itemmeta);
            
    		ItemStack manacrystal = new ItemStack(Material.PRISMARINE_SHARD);
            itemmeta.setDisplayName(ChatColor.BLUE + "" + ChatColor.BOLD + "MANA CRYSTAL " + ChatColor.GRAY + "(Right-Click)");
            manacrystal.setItemMeta(itemmeta);
            
			PlayerInventory inventory = player.getInventory();
			
			if (inventory.contains(rage) || (inventory.contains(crush) || inventory.contains(speed) || inventory.contains(leap) || inventory.contains(purify) || inventory.contains(invis) || inventory.contains(fly))) {
				sender.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " It seems you've already chosen a race!");
				return true;
			}

			else
		    sender.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Are you sure? " + ChatColor.GRAY + "You will have to pay to change race in future!");
			sender.sendMessage(ChatColor.GRAY + "Type: " + ChatColor.YELLOW + "/humanconfirm " + ChatColor.GRAY + "to confirm your race.");
			
		    }
		
		    if (cmd.getName().equalsIgnoreCase("humanconfirm")) {
		    	
				ItemStack speed = new ItemStack(Material.STICK, 1);
	            ItemMeta itemmeta = speed.getItemMeta();
	            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "SPEED " + ChatColor.GRAY + "(Right-Click)");
	            speed.setItemMeta(itemmeta);
				
				ItemStack leap = new ItemStack(Material.STICK, 1);
	            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "LEAP " + ChatColor.GRAY + "(Right-Click)");
	            leap.setItemMeta(itemmeta);
	            
	            ItemStack invis = new ItemStack(Material.STICK, 1);
	            itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "CLOAK " + ChatColor.GRAY + "(Right-Click)");
	            invis.setItemMeta(itemmeta);
	            
	            ItemStack fly = new ItemStack(Material.STICK, 1);
	            itemmeta.setDisplayName(ChatColor.AQUA + "" + ChatColor.BOLD + "FLY " + ChatColor.GRAY + "(Right-Click)");
	            fly.setItemMeta(itemmeta);
	            
				ItemStack purify = new ItemStack(Material.STICK, 1);
	            itemmeta.setDisplayName(ChatColor.DARK_GREEN + "" + ChatColor.BOLD + "PURIFY " + ChatColor.GRAY + "(Right-Click)");
	            purify.setItemMeta(itemmeta);
	            
		    	ItemStack rage = new ItemStack(Material.STICK, 1);
	            itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "RAGE " + ChatColor.GRAY + "(Right-Click)");
	            rage.setItemMeta(itemmeta);
				
	            ItemStack crush = new ItemStack(Material.STICK, 1);
	            itemmeta.setDisplayName(ChatColor.DARK_RED + "" + ChatColor.BOLD + "CRUSH " + ChatColor.GRAY + "(Right-Click)");
	            crush.setItemMeta(itemmeta);
	            
	    		ItemStack food = new ItemStack(Material.BREAD, 15);
	    		itemmeta.setDisplayName(ChatColor.WHITE + "Bread");
	            food.setItemMeta(itemmeta);
	            
	    		ItemStack manacrystal = new ItemStack(Material.PRISMARINE_SHARD);
	            itemmeta.setDisplayName(ChatColor.BLUE + "" + ChatColor.BOLD + "MANA CRYSTAL " + ChatColor.GRAY + "(Right-Click)");
	            manacrystal.setItemMeta(itemmeta);
	            
	    		PlayerInventory inventory = player.getInventory();
				if (inventory.contains(rage) || (inventory.contains(crush) || (inventory.contains(leap) || inventory.contains(speed) || inventory.contains(purify) || inventory.contains(invis) || inventory.contains(fly)))) {
					sender.sendMessage(ChatColor.RED + "" + ChatColor.BOLD + "Oops!" + ChatColor.GRAY + " It seems you've already chosen a race!");
					return true;
				}
	            
			sender.sendMessage(ChatColor.AQUA + "" + ChatColor.BOLD + "Human " + ChatColor.GRAY + "race chosen!");
			sender.sendMessage(ChatColor.AQUA + "" + ChatColor.BOLD + "Human Agility! " + ChatColor.GRAY + "You now walk 2x as fast!");
			
			player.setGameMode(GameMode.SURVIVAL);
			player.setWalkSpeed((float) 0.3);
            player.getInventory().setItem(0, invis);
            player.getInventory().setItem(1, fly);
            player.getInventory().setItem(6, manacrystal);
            player.getInventory().setItem(7, manacrystal);
            player.getInventory().setItem(8, food);
			 }
       

	
		return true;
	}
	
	
	
}

